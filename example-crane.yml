containers:

  # Config image. Pre-seeds the '/config' folder with initial settings
  # See: https://github.com/dreamcat4/docker-images/blob/master/tvh/config/Dockerfile
  tvh.config:
    image: dreamcat4/tvh.config

  # Main 'tvheadend' image
  tvh:
    image: dreamcat4/tvheadend
    run:
      net: none
      cmd: --satip_xml http://satip.lan:8080/desc.xml --bindaddr 192.168.1.4
      volume:
        - /data/TvShows:/recordings
      volumes-from:
        - tvh.config
      env:
        - pipework_wait=eth0
        - pipework_cmd=eth0 -i eth0 @CONTAINER_NAME@ 192.168.1.4
      detach: true

  # Optional: A sister image you can switch over to when debugging tvheadend problems
  tvh.debug:
    image: dreamcat4/tvh.debug
    run:
      privileged: true
      net: none
      cmd: --satip_xml http://satip.lan:8080/desc.xml --bindaddr 192.168.1.4
      volume:
        - /data/TvShows:/recordings
        - /home/myusername/tvh_debug:/crash
      volumes-from:
        - tvh.config
      env:
        - pipework_wait=eth0
        - pipework_cmd=eth0 -i eth0 @CONTAINER_NAME@ 192.168.1.4

  # For networking like the vmware 'bridged mode'
  pipework:
    image: dreamcat4/pipework
    run:
      restart: always
      volume:
        - /var/run/docker.sock:/docker.sock
      privileged: true
      pid: host
      net: host
      env:
        - run_mode=batch,daemon
        - debug=true



# Instructions for 'crane' tool (https://github.com/michaelsauter/crane)

# Build / Download
# $ crane provision -v pipework tvh.config tvh tvh.debug

# Create instances
# $ crane create -v --recreate pipework tvh.config tvh tvh.debug

# Start pipework
# $ docker start pipework

# Start tvheadend
# $ docker start tvh

# Stop tvheadend
# $ docker stop tvh

